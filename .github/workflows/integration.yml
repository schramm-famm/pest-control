name: Build & Integration Test
on:
  - push
  - pull_request
jobs:
  testing:
    name: Build & Integration Test
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TF_VAR_name: ga-${{ github.run_id }}
      TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_docdb_user: github
      TF_VAR_docdb_pw: ${{ secrets.DOCDB_PW }}
      TF_VAR_container_tag: ${{ github.run_id }}
      IMAGE_EXISTS: false
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          TAG: ${{ env.TF_VAR_container_tag }}
        run: |
          make docker-push
          echo "::set-env name=IMAGE_EXISTS::true"
      - name: Terraform Init
        uses: schramm-famm/terraform-github-actions@thao/no-auto-destroy
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: init
          tf_actions_working_dir: terraform
      - name: Terraform Apply
        uses: schramm-famm/terraform-github-actions@thao/no-auto-destroy
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: apply
          tf_actions_working_dir: terraform
      - name: Terraform Destroy
        if: always()
        uses: schramm-famm/terraform-github-actions@thao/no-auto-destroy
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: destroy
          tf_actions_working_dir: terraform
      - name: Delete image from Amazon ECR
        if: always()
        run: |
          if [ "$IMAGE_EXISTS" == "true" ]; then
            aws ecr batch-delete-image --repository-name pest-control\
            --image-ids imageTag=$TF_VAR_container_tag
          fi
      - name: Log out of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
